{"version":3,"sources":["reportWebVitals.js","Utils.js","ServiceItems.js","ServiceList.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Utils","input","RegExp","test","ServiceItems","props","handleUrlFieldChange","e","selectedUrl","target","value","handleTitleFieldChange","selectedTitle","handleClickOpenDeleteDialog","setState","state","open","handleCloseDeleteDialog","handleAgreeDeleteDialog","console","log","deleteItem","handleDisagreeDeleteDialog","handleClickOpenEditDialog","openEdit","handleCloseEditDialog","handleAgreeEditDialog","editItem","handleDisagreeEditDialog","handleChange","selectedId","createService","bind","render","this","isValidURL","a","fetch","method","headers","body","JSON","stringify","rawResponse","json","result","alert","window","document","location","reload","getElementById","remove","listItems","entries","map","className","Box","width","bgcolor","p","my","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","fullWidth","TextField","margin","label","defaultValue","onChange","item","status","left","title","url","openDeleteDialog","openEditDialog","React","Component","ServiceList","items","addItem","loadData","res","isLoaded","error","newItem","response","_inputElementTitle","_inputElementUrl","prevState","concat","saveItem","preventDefault","onSubmit","ref","placeholder","type","ReactDOM"],"mappings":"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","file":"static/js/main.07a78a43.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","class Utils {\n    static isValidURL(input) {\n        const pattern = '^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-zA-Z\\\\d]([a-zA-Z\\\\d-]{0,61}[a-zA-Z\\\\d])*\\\\.)+' + // sub-domain + domain name\n            '[a-zA-Z]{2,13})' + // extension\n            '|((\\\\d{1,3}\\\\.){3}\\\\d{1,3})' + // OR ip (v4) address\n            '|localhost)' + // OR localhost\n            '(\\\\:\\\\d{1,5})?' + // port\n            '(\\\\/[a-zA-Z\\\\&\\\\d%_.~+-:@]*)*' + // path\n            '(\\\\?[a-zA-Z\\\\&\\\\d%_.,~+-:@=;&]*)?' + // query string\n            '(\\\\#[-a-zA-Z&\\\\d_]*)?$'; // fragment locator\n        const regex = new RegExp(pattern);\n        return regex.test(input);\n    }\n}\n\nexport default Utils;\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Fade from 'react-reveal/Fade';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from '@material-ui/core/TextField';\nimport Utils from \"./Utils\"\n\n/**\n * Items in service list component.\n *\n */\nclass ServiceItems extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            openEdit: false\n        };\n\n        this.selectedId = null;\n        this.selectedUrl = '';\n        this.selectedTitle = '';\n        this.createService = this.createService.bind(this);\n        this.render = this.render.bind(this);\n    }\n\n    handleUrlFieldChange = (e) => {\n        this.selectedUrl = e.target.value;\n    }\n\n    handleTitleFieldChange = (e) => {\n        this.selectedTitle = e.target.value;\n    }\n\n    openDeleteDialog() {\n        this.setState(state => ({\n            open: true\n        }));\n    }\n\n    handleClickOpenDeleteDialog = () => {\n        this.setState(state => ({\n            open: true\n        }));\n    };\n\n    handleCloseDeleteDialog = () => {\n        this.setState(state => ({\n            open: false\n        }));\n    };\n\n    handleAgreeDeleteDialog = () => {\n        console.log(\"Delete\");\n        this.deleteItem();\n        this.handleCloseDeleteDialog();\n    };\n\n    handleDisagreeDeleteDialog = () => {\n        console.log(\"Cancel deleting.\");\n        this.handleCloseDeleteDialog();\n    };\n\n    openEditDialog() {\n        this.setState(state => ({\n            openEdit: true\n        }));\n    }\n\n    handleClickOpenEditDialog = () => {\n        this.setState(state => ({\n            openEdit: true\n        }));\n    };\n\n    handleCloseEditDialog = () => {\n        this.setState(state => ({\n            openEdit: false\n        }));\n    };\n\n    handleAgreeEditDialog = () => {\n        console.log(\"Edit\");\n        this.editItem();\n        this.handleCloseEditDialog();\n    };\n\n    handleDisagreeEditDialog = () => {\n        console.log(\"Cancel editing.\");\n        this.handleCloseEditDialog();\n    };\n\n    editItem() {\n        console.log('this.selectedUrl in editItem', this.selectedUrl);\n        console.log('this.selectedTitle in editItem', this.selectedTitle);\n\n        if (this.selectedUrl === '' || !Utils.isValidURL(this.selectedUrl)) {\n            alert('Not valid or empty URL.')\n            return;\n        }\n\n        if (this.selectedTitle === '') {\n            alert('Name is a required field.')\n            return;\n        }\n\n        if (this.selectedId === '' || this.selectedId === null) return;\n\n        console.log('Amended items', this.selectedId, this.selectedUrl);\n\n        //@todo URLS should not be hard-coded in frontend code. It should come from an environment config.\n        (async () => {\n            const rawResponse = await fetch('http://localhost:8888/service', {\n                method: 'PUT',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({'id': this.selectedId, 'url': this.selectedUrl, 'title': this.selectedTitle})\n            });\n\n            const response = await rawResponse.json();\n\n            if (response.result !== 'ok') {\n                alert('Edit failed. Please, try it again.')\n            }\n\n            this.selectedId = null;\n            this.selectedUrl = '';\n            this.selectedTitle = '';\n\n            window.document.location.reload(); //@todo This should be more sophisticated. It should just chaange the values in the array.\n        })();\n\n    }\n\n    deleteItem() {\n\n        //@todo URLS should not be hard-coded in frontend code. It should come from an environment config.\n        (async () => {\n            const rawResponse = await fetch('http://localhost:8888/service', {\n                method: 'DELETE',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({'id': this.selectedId})\n            });\n\n            const response = await rawResponse.json();\n\n            if (response.result === 'ok') {\n                document.getElementById(this.selectedId).remove();\n            } else {\n                alert('Delete failed. Please, try it again.')\n            }\n\n            this.selectedId = null;\n\n        })();\n    }\n\n    render() {\n\n        let serviceEntries = this.props.entries;\n        let listItems = serviceEntries.map(this.createService);\n\n        //@todo Dialogs should go to a separated component.\n        return (\n            <div className=\"listDiv\">\n                <Box width=\"100%\" bgcolor=\"white\" p={1} my={0.5}>\n                    {listItems}\n                </Box>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleCloseDeleteDialog}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {\"Delete\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Would you like to delete the selected item?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDisagreeDeleteDialog} color=\"primary\">\n                            No\n                        </Button>\n                        <Button onClick={this.handleAgreeDeleteDialog} color=\"primary\" autoFocus>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={this.state.openEdit}\n                        fullWidth={ true }\n                        onClose={this.handleCloseEditDialog}\n                        aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                           Amending of selected service.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"titleField\"\n                            label=\"Name\"\n                            defaultValue={this.selectedTitle}\n                            onChange={this.handleTitleFieldChange}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"urlField\"\n                            label=\"URL\"\n                            defaultValue={this.selectedUrl}\n                            onChange={this.handleUrlFieldChange}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDisagreeEditDialog} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleAgreeEditDialog} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n\n    createService(item) {\n        console.log('Item in ServiceItems: ', item)\n\n        if (item.status === null || item.status === '') {\n            item.status = 'QUEUEING';\n        }\n\n        const handleDelete = (id) => {\n            console.log('handleDelete row Id: ', id);\n            this.selectedId = id;\n            this.openDeleteDialog();\n        };\n\n        const handleEdit = (id, url, title) => {\n            console.log('handleStatus row Id: ', id)\n            this.selectedId = id;\n            this.selectedUrl = url;\n            this.selectedTitle = title;\n            this.openEditDialog();\n        };\n\n        return <Fade left>\n            <div className=\"itemRow\" key={item.id} id={item.id}>\n                <span className=\"textColumn bolder\">{item.title}</span>\n                <span className=\"textColumn\">{item.url}</span>\n                <span className=\"itemRowStatus\">{item.status}</span>\n                <span className=\"buttonColum\"><Button color=\"secondary\"\n                                                      onClick={() => handleDelete(item.id)}\n                >Delete</Button></span>\n\n                <span className=\"buttonColum\"><Button color=\"primary\"\n                                                      onClick={() => handleEdit(item.id, item.url, item.title)}>Edit</Button></span>\n            </div>\n        </Fade>\n    }\n\n\n    handleChange = () => {\n        console.log('this.selectedId', this);\n    }\n};\n\nexport default ServiceItems;\n","import React, {Component} from \"react\";\nimport ServiceItems from \"./ServiceItems\";\nimport Utils from \"./Utils\"\n\n/**\n * Service List component.\n *\n * @author Janos Vajda\n */\nclass ServiceList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        };\n\n        this.addItem = this.addItem.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n\n        //@todo URLS should not be hard-coded in frontend code. It should come from an environment config.\n        fetch(\"http://localhost:8888/service\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log('Result of componentDidMount in ServiceList: ', result)\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    saveItem(newItem) {\n\n        //@todo URLS should not be hard-coded in frontend code. It should come from an environment config.\n        (async () => {\n            const rawResponse = await fetch('http://localhost:8888/service', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newItem)\n            });\n            const response = await rawResponse.json();\n\n            console.log('Response of saveItem in ServiceList componenet: ', response);\n        })();\n    }\n\n    addItem(e) {\n\n        if (this._inputElementTitle.value === '' ) {\n            alert('Nama of the service is required.');\n            return;\n        }\n\n        if (this._inputElementUrl.value !== \"\" && Utils.isValidURL(this._inputElementUrl.value)) {\n\n            let newItem = {\n                title: this._inputElementTitle.value,\n                url: this._inputElementUrl.value,\n                id: 0,\n                status: null,\n            };\n\n            this.setState((prevState) => {\n                return {\n                    items: prevState.items.concat(newItem)\n                };\n            });\n\n            this._inputElementTitle.value = \"\";\n            this._inputElementUrl.value = \"\";\n\n            console.log('New item: ', newItem)\n            this.saveItem(newItem);\n        } else {\n            alert('You can add only a valid url.'); //@todo change to material alert.\n        }\n\n        e.preventDefault();\n    }\n\n    render() {\n\n        //@todo All form's element should be replaced width a Material compontents.\n        return (\n            <div className=\"serviceListMain\">\n                <div className=\"header\">\n                    <form onSubmit={this.addItem}>\n                        <span className=\"inputTitle\">Add new service:</span>\n                        <input className=\"addInput\" ref={(a) => this._inputElementTitle = a}\n                               placeholder=\"Name of the service...\">\n                        </input>\n                        <input className=\"addInput\" ref={(a) => this._inputElementUrl = a}\n                               placeholder=\"Url of the service...\">\n                        </input>\n                        <button className=\"addButton\" type=\"Add\">Add</button>\n                    </form>\n                </div>\n                <ServiceItems entries={this.state.items}/>\n            </div>\n        );\n    }\n}\n\n\nexport default ServiceList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ServiceList from \"./ServiceList\";\n\nReactDOM.render(\n    <ServiceList/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}